name: Update Homebrew Formula

on:
  workflow_run:
    workflows: ["Release"]
    types: [completed]
    branches: [main]

jobs:
  update-formula:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout release
        uses: actions/checkout@v4

      - name: Get latest release tag
        id: get_tag
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Get the latest release tag
          TAG=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Latest release tag: $TAG"

      - name: Download release artifacts
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Get the tag name from the previous step
          TAG="${{ steps.get_tag.outputs.tag }}"
          VERSION="${TAG#v}"  # Remove 'v' prefix

          echo "Downloading artifacts for version $VERSION..."

          # Download all tarballs
          gh release download "$TAG" \
            --pattern "loadout-*.tar.gz" \
            --dir ./artifacts

      - name: Calculate SHA256 checksums
        id: checksums
        run: |
          cd artifacts

          # Calculate checksums and store them
          SHA_MACOS_ARM64=$(shasum -a 256 loadout-macos-arm64.tar.gz | awk '{print $1}')
          SHA_MACOS_X64=$(shasum -a 256 loadout-macos-x64.tar.gz | awk '{print $1}')
          SHA_LINUX_ARM64=$(shasum -a 256 loadout-linux-arm64.tar.gz | awk '{print $1}')
          SHA_LINUX_X64=$(shasum -a 256 loadout-linux-x64.tar.gz | awk '{print $1}')

          echo "macos_arm64=$SHA_MACOS_ARM64" >> $GITHUB_OUTPUT
          echo "macos_x64=$SHA_MACOS_X64" >> $GITHUB_OUTPUT
          echo "linux_arm64=$SHA_LINUX_ARM64" >> $GITHUB_OUTPUT
          echo "linux_x64=$SHA_LINUX_X64" >> $GITHUB_OUTPUT

          echo "Checksums calculated:"
          echo "macOS ARM64: $SHA_MACOS_ARM64"
          echo "macOS x64: $SHA_MACOS_X64"
          echo "Linux ARM64: $SHA_LINUX_ARM64"
          echo "Linux x64: $SHA_LINUX_X64"

      - name: Update Homebrew formula
        env:
          GH_TOKEN: ${{ secrets.TAP_REPO_TOKEN }}
        run: |
          TAG="${{ steps.get_tag.outputs.tag }}"
          VERSION="${TAG#v}"

          # Clone the tap repository
          git clone https://x-access-token:${GH_TOKEN}@github.com/noheltcj/loadout-tap.git
          cd loadout-tap

          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Create a new branch for the update
          BRANCH="update-formula-v${VERSION}"
          git checkout -b "$BRANCH"

          # Update the formula file
          cat > Formula/loadout.rb << EOF
          class Loadout < Formula
            desc "CLI tool for managing and composing configuration fragments across projects"
            homepage "https://github.com/noheltcj/loadout"
            version "$VERSION"
            license "MIT"

            on_macos do
              if Hardware::CPU.arm?
                url "https://github.com/noheltcj/loadout/releases/download/${TAG}/loadout-macos-arm64.tar.gz"
                sha256 "${{ steps.checksums.outputs.macos_arm64 }}"
              else
                url "https://github.com/noheltcj/loadout/releases/download/${TAG}/loadout-macos-x64.tar.gz"
                sha256 "${{ steps.checksums.outputs.macos_x64 }}"
              end
            end

            on_linux do
              if Hardware::CPU.arm?
                url "https://github.com/noheltcj/loadout/releases/download/${TAG}/loadout-linux-arm64.tar.gz"
                sha256 "${{ steps.checksums.outputs.linux_arm64 }}"
              else
                url "https://github.com/noheltcj/loadout/releases/download/${TAG}/loadout-linux-x64.tar.gz"
                sha256 "${{ steps.checksums.outputs.linux_x64 }}"
              end
            end

            def install
              bin.install "loadout"
            end

            test do
              assert_match "Usage: loadout", shell_output("#{bin}/loadout --help")
            end
          end
          EOF

          # Commit and push
          git add Formula/loadout.rb
          git commit -m "Update formula to version $VERSION"
          git push origin "$BRANCH"

          # Create pull request
          RELEASE_URL="https://github.com/${{ github.repository }}/releases/tag/${TAG}"
          gh pr create \
            --repo noheltcj/loadout-tap \
            --title "Update formula to version $VERSION" \
            --body "Automated update to version $VERSION from release ${TAG}

          **Release Notes:** ${RELEASE_URL}

          **Checksums:**
          - macOS ARM64: \`${{ steps.checksums.outputs.macos_arm64 }}\`
          - macOS x64: \`${{ steps.checksums.outputs.macos_x64 }}\`
          - Linux ARM64: \`${{ steps.checksums.outputs.linux_arm64 }}\`
          - Linux x64: \`${{ steps.checksums.outputs.linux_x64 }}\`

          This PR was automatically generated by the update-homebrew-formula workflow." \
            --head "$BRANCH" \
            --base main
